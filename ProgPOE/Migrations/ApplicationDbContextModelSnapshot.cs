// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProgPOE.Data;

#nullable disable

namespace ProgPOE.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProgPOE.Models.Farmer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FarmLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FarmName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Farmers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john.smith@example.com",
                            FarmLocation = "Eastern Cape",
                            FarmName = "Green Acres Farm",
                            FirstName = "John",
                            LastName = "Smith",
                            PhoneNumber = "0123456789",
                            RegistrationDate = new DateTime(2025, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Email = "mary.johnson@example.com",
                            FarmLocation = "Western Cape",
                            FarmName = "Sunrise Valley Farm",
                            FirstName = "Mary",
                            LastName = "Johnson",
                            PhoneNumber = "0987654321",
                            RegistrationDate = new DateTime(2025, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ProgPOE.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FarmerId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FarmerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Vegetables",
                            Description = "Fresh organic tomatoes",
                            FarmerId = 1,
                            Name = "Organic Tomatoes",
                            PricePerUnit = 25.50m,
                            ProductionDate = new DateTime(2025, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 100.0,
                            Unit = "kg"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Dairy & Eggs",
                            Description = "Farm-fresh free-range eggs",
                            FarmerId = 1,
                            Name = "Free-range Eggs",
                            PricePerUnit = 45.00m,
                            ProductionDate = new DateTime(2025, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 500.0,
                            Unit = "dozen"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Vegetables",
                            Description = "Fresh sweet corn",
                            FarmerId = 2,
                            Name = "Sweet Corn",
                            PricePerUnit = 15.75m,
                            ProductionDate = new DateTime(2025, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 200.0,
                            Unit = "kg"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Fruits",
                            Description = "Freshly picked organic apples",
                            FarmerId = 2,
                            Name = "Organic Apples",
                            PricePerUnit = 18.50m,
                            ProductionDate = new DateTime(2025, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 300.0,
                            Unit = "kg"
                        });
                });

            modelBuilder.Entity("ProgPOE.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FarmerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FarmerId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "employee123",
                            RegistrationDate = new DateTime(2025, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "Employee",
                            Username = "employee"
                        },
                        new
                        {
                            Id = 2,
                            FarmerId = 1,
                            Password = "farmer123",
                            RegistrationDate = new DateTime(2025, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "Farmer",
                            Username = "farmer"
                        });
                });

            modelBuilder.Entity("ProgPOE.Models.Product", b =>
                {
                    b.HasOne("ProgPOE.Models.Farmer", "Farmer")
                        .WithMany("Products")
                        .HasForeignKey("FarmerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farmer");
                });

            modelBuilder.Entity("ProgPOE.Models.User", b =>
                {
                    b.HasOne("ProgPOE.Models.Farmer", "Farmer")
                        .WithMany()
                        .HasForeignKey("FarmerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Farmer");
                });

            modelBuilder.Entity("ProgPOE.Models.Farmer", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
